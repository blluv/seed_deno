import { assertEquals } from "https://deno.land/std@0.104.0/testing/asserts.ts";
import { SeedDecrypt, SeedEncrypt, SeedRoundKey } from "./seed.ts";

// deno-fmt-ignore
const TestCase = [
  {
    key: [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F],
    plainText: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    cipherText: [0xC1, 0x1F, 0x22, 0xF2, 0x01, 0x40, 0x50, 0x50, 0x84, 0x48, 0x35, 0x97, 0xE4, 0x37, 0x0F, 0x43],
  },
  {
    key: [0x47, 0x06, 0x48, 0x08, 0x51, 0xE6, 0x1B, 0xE8, 0x5D, 0x74, 0xBF, 0xB3, 0xFD, 0x95, 0x61, 0x85],
    plainText: [0x83, 0xA2, 0xF8, 0xA2, 0x88, 0x64, 0x1F, 0xB9, 0xA4, 0xE9, 0xA5, 0xCC, 0x2F, 0x13, 0x1C, 0x7D],
    cipherText: [0xEE, 0x54, 0xD1, 0x3E, 0xBC, 0xAE, 0x70, 0x6D, 0x22, 0x6B, 0xC3, 0x14, 0x2C, 0xD4, 0x0D, 0x4A],
  },
  {
    key: [0x28, 0xDB, 0xC3, 0xBC, 0x49, 0xFF, 0xD8, 0x7D, 0xCF, 0xA5, 0x09, 0xB1, 0x1D, 0x42, 0x2B, 0xE7],
    plainText: [0xB4, 0x1E, 0x6B, 0xE2, 0xEB, 0xA8, 0x4A, 0x14, 0x8E, 0x2E, 0xED, 0x84, 0x59, 0x3C, 0x5E, 0xC7],
    cipherText: [0x9B, 0x9B, 0x7B, 0xFC, 0xD1, 0x81, 0x3C, 0xB9, 0x5D, 0x0B, 0x36, 0x18, 0xF4, 0x0F, 0x51, 0x22],
  },
];

Deno.test("Encrypt", () => {
  for (const tcase of TestCase) {
    const roundKey = SeedRoundKey(tcase.key);
    const cipherText = SeedEncrypt(roundKey, tcase.plainText);
    assertEquals(cipherText, tcase.cipherText);
  }
});

Deno.test("Decrypt", () => {
  for (const tcase of TestCase) {
    const roundKey = SeedRoundKey(tcase.key);
    const plainText = SeedDecrypt(roundKey, tcase.cipherText);
    assertEquals(plainText, tcase.plainText);
  }
});
